## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## Please use "/etc/sdwdate.d/50_sdwdate_user" for your custom
## configuration, which will override the defaults found here.
## When sdwdate is updated, this file may be overwritten.

## Bash Fragment.

## Add this to curl as option.
CURL_VERBOSE="--silent"

## Enable/disable debugging.
## 1 enabled.
## 2 disabled.
DEBUG=0

## Remove "--silent" from invocations of curl.
#CURL_VERBOSE=""

## Extra options for tlsdate in case using tlsdate time setting method.
#TLSDATE_EXTRA_OPTIONS="--verbose"

## Run as the following user name.
## Not implemented. Has no effect.
USER=""

## TODO
## Must be either,
## curl
## tlsdate
#TIME_FETCHING_METHOD="tlsdate"
TIME_FETCHING_METHOD="curl"

## Do or do not actually change the date/time after successfully fetching it.
## 0 set date.
## 1 do not set date.
DONT_SET_DATE=0

## do not move the time forward
## 0 disabled
## 1 enabled
NO_MOVE_FORWARD=0

## do not move the time backwards
## 0 disabled
## 1 enabled
NO_MOVE_BACKWARDS=0

## update hardware clock
## 0 disabled
## 1 enabled
SYSTOHC=0

## Http user agent.
## When set to "", uses curl's default.
#HTTP_USER_AGENT="$(/usr/bin/getTorbuttonUserAgent)"
#HTTP_USER_AGENT="Mozilla/5.0 (Windows NT 6.1; rv:10.0) Gecko/20100101 Firefox/10.0"
HTTP_USER_AGENT=""

## Log file.
LOG_FILE=/var/log/sdwdate.log

## Done file. Will be created after run no matter if failure or success.
DONE_FILE=/var/run/sdwdate/done

## Success file. Will only be created after a success.
SUCCESS_FILE=/var/run/sdwdate/success

## First success file. Will be created after the first success.
FIRST_SUCCESS_FILE=/var/run/sdwdate/first_success

## How many members per pool are allowed to fail.
## If too many members are not reachable, time will not be adjusted.
ALLOWED_PER_POOL_FAILURE_RATIO=0.34

## Temporary directory for file downloads.
## When not set, default to: TEMP_DIR="$(mktemp --directory)"
#TEMP_DIR=""

## Which proxy curl should use.
## If empty, no proxy will be used.
PROXY=""

## How often sdwdate should run in minutes.
## 0 disables it and sdwdate exits after run.
INTERVAL="60"

## How many minutes should be waited before running sdwdate again.
## Only has an effect when RANDOMIZE is set to 1 as well.
MIN_INTERVAL="10"

## Randomize the interval above.
## Minimum 10 minutes.
## Maximum $INTERVAL minutes.
## 0 disabled.
## 1 enabled.
RANDOMIZE="1"

## Use sclockadj instead of /bin/date (which would produce clock jumps) when
## starting up.
## 0 sclockadj disabled
## 1 sclockadj enabled
## defaults to: 0
SDWDATE_USE_SCLOCKADJ_WHEN_STARTUP="0"

## Use sclockadj instead of /bin/date (which would produce clock jumps) when
## re-starting up when sdwdate succeeded at least once after boot.
## 0 sclockadj disabled
## 1 sclockadj enabled
## defaults to: 0
SDWDATE_USE_SCLOCKADJ_WHEN_RESTARTUP="0"

## Use sclockadj instead of /bin/date (which would produce clock jumps) when
## in daemon mode.
## 0 sclockadj disabled
## 1 sclockadj enabled
## defaults to: 1
SDWDATE_USE_SCLOCKADJ_WHEN_DAEMON="1"

## sclockadj verbose logging or not
## --no-verbose
## --verbose
## defaults to: --no-verbose
SDWDATE_SCLOCKADJ_VERBOSE="--no-verbose"

## sclockadj change date or not
## --no-debug
## --debug
## defaults to: --no-debug (change date)
SDWDATE_SCLOCKADJ_CHANGE_DATE="--no-debug"

## If sclockadj should wait before its first iteration.
## --no-first-wait
## --first-wait
## default to: --no-first-wait
SDWDATE_SCLOCKADJ_FIRST_WAIT="--no-first-wait"

## Move clock minimum nanoseconds (except rest).
## defaults to: 500000
## (500000 ns = 0.5 ms = 0.0005 s)
SDWDATE_SCLOCKADJ_MOVE_MIN="500000"

## Move clock maximum nanoseconds (except rest).
## defaults to: 500000
## (500000 ns = 0.5 ms = 0.0005 s)
SDWDATE_SCLOCKADJ_MOVE_MAX="500000"

## Wait nanoseconds minimum before next iteration.
## defaults to: 1000000000
## (1000000000 ns = 1000 ms = 1 s)
SDWDATE_SCLOCKADJ_WAIT_MIN="1000000000"

## Wait nanoseconds maximum before next iteration.
## defaults to: 1000000000
## (1000000000 ns = 1000 ms = 1 s)
SDWDATE_SCLOCKADJ_WAIT_MAX="1000000000"

## This command will be `eval`uated before DISPATCH_PREREQUISITE and before running curl.
## sdwdate provides the $SDW_MODE variable, which is either set to
## - startup (when the sdwdate process is started)
## - daemon (when the sdwdate process finished one loop and will continue)
## When set to "", it will be skipped.
DISPATCH_PRE=""

## Prerequisite before trying to connect to servers.
## This is supposed to be a command to be `eval`uated and to exit with code
## - 0, if sdwdate should continue.
## - 1, if sdwdate should terminate itself due to an expected error.
## - 2, if sdwdate should wait 10 seconds and then run the command again.
## - Anything else, if sdwdate should terminate itself due to an unexpected error.
## It may be useful to check if the network is already reachable.
## When set to "", it will be skipped.
DISPATCH_PREREQUISITE=""

## This command will be `eval`uated when an unexpected error (bug) in sdwdate has been caught.
## sdwdate will provide the $error_message and $DONE_FILE variable.
## Remember to escape variables either using \$ or '$variable'.
## When set to "", it will be skipped.
DISPATCH_POST_ERROR=""

## Create $DONE_FILE on error.
## 1 enabled.
## 0 disabled.
SDW_TOUCH_DONE_FILE_ON_ERROR="1"

## Exit 1 on error. This will stop the daemon from running.
## 1 enabled.
## 0 disabled.
SDW_EXIT_ON_ERROR="1"

## echo remote unix time even when using --quiet
## true - enabled.
## false - disabled.
ECHO_UNIX_TIME="false"

## This command will be `eval`uated when sdwdate succeeded.
## When set to "", it will be skipped.
DISPATCH_POST_SUCCESS=""

## This command will be `eval`uated when sdwdate failed.
## When set to "", it will be skipped.
DISPATCH_POST_FAILURE=""

## This command will be `eval`uated before trying to connect to the pool one.
## When set to "", it will be skipped.
SDWDATE_CURL_DISPATCH_PRE[SDWDATE_POOL_ONE]=""

## This command will be `eval`uated before after connecting to the pool one.
## When set to "", it will be skipped.
SDWDATE_CURL_DISPATCH_POST[SDWDATE_POOL_ONE]=""

## This command will be `eval`uated before trying to connect to the pool two.
## When set to "", it will be skipped.
SDWDATE_CURL_DISPATCH_PRE[SDWDATE_POOL_TWO]=""

## This command will be `eval`uated before after connecting to the pool two.
## When set to "", it will be skipped.
SDWDATE_CURL_DISPATCH_POST[SDWDATE_POOL_TWO]=""

## This command will be `eval`uated before trying to connect to pool three.
## When set to "", it will be skipped.
SDWDATE_CURL_DISPATCH_PRE[SDWDATE_POOL_THREE]=""

## This command will be `eval`uated before trying after connecting to the pool three.
## When set to "", it will be skipped.
SDWDATE_CURL_DISPATCH_POST[SDWDATE_POOL_THREE]=""

## pool one.
SDWDATE_POOL_ONE=(
         boum.org
         chavez.indymedia.org
         db.debian.org
         debian.org
         epic.org
         mail.riseup.net
         sarava.org
         squat.net
         tachanka.org
         www.1984.is
         www.eff.org
         www.immerda.ch
         www.privacyinternational.org
         www.torproject.org
         freedom.press
)

## pool two.
SDWDATE_POOL_TWO=(
         grc.com
         www.tarsnap.com
         wikileaks.org
         pressfreedomfoundation.org
         securedrop.theguardian.com
         safesource.forbes.com
         en.wikipedia.org
         cve.mitre.org
         duckduckgo.com
         lkml.org
         www.gnu.org
         fsf.org
         fsfe.org
         defectivebydesign.org
         www.kernel.org
         opentechfund.org
         firstlook.org
)

## pool three.
SDWDATE_POOL_THREE=(
         www.startpage.com
         www.apache.org
         www.centos.org
         www.piratenpartei.de
         www.torservers.net
         www.accessnow.org
         rsf.org
         www.wauland.de
         www.ccc.de
         netzpolitik.org
         privacyfoundation.ch
         www.noisebridge.net
         en.bitcoin.it
         www.calyxinstitute.org
         gnupg.org
         gpgtools.org
         schneier.com
)
