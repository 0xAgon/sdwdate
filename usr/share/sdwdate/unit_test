#!/bin/bash

#set -x

echo "-------------------- Start Unit Test --------------------"

set -e
set -o pipefail
set -o errtrace

echo "-------------------- Begin Sourcing --------------------"

for i in /usr/lib/sdwdate/modules.d/* /etc/sdwdate.d/*; do
   if [ -f "$i" ]; then
      ## If the last character is a ~, ignore that file,
      ## because it was created by some editor,
      ## which creates backup files.
      if [ "${i: -1}" = "~" ]; then
         continue
      fi
      ## Skipping files such as .dpkg-old and .dpkg-dist.
      if ( echo "$i" | grep -q ".dpkg-" ); then
         true "skip $i"
         continue
      fi
      bash -n "$i"
      source "$i"
   fi
done

echo "-------------------- End Sourcing --------------------"

echo "-------------------- Begin Setup for Unit Test --------------------"

sdwdate_error_handler() {
   local exit_code="$?"
   local error_cause error_text
   error_text="$1"
   if [ "$error_text" = "" ]; then
      error_cause="$FUNCNAME signal ERR detected with BASH_COMMAND:
$BASH_COMMAND"
   else
      error_cause="$FUNCNAME called with error_text:
$error_text"
   fi
   exit 1
}

trap "sdwdate_error_handler" ERR

sdwdate_log() {
   true "$FUNCNAME (unit test): $@"
}

sdwdate_no_duplicate_log() {
   true "$FUNCNAME (unit test): $@"
}

echo "-------------------- End Setup for Unit Test --------------------"

echo "-------------------- Begin Unit Test 1 --------------------"

download_unit_test() {
   echo "-------------------- -------------------- --------------------"

   #sdwdate_defaults

   TEMP_DIR="/tmp/test"
   SDWDATE_CURRENT_POOL="testpool"
   mkdir --parents "$TEMP_DIR"
   touch "$TEMP_DIR/$SDWDATE_CURRENT_POOL"

   declare -A -g sdwdate_download_tool_exit_code
   declare -A -g SDWDATE_DOWNLOAD_TOOL_PID
   declare -A -g SDWDATE_DOWNLOAD_TOOK_TIME

   i="0"
   for element in "${SDWDATE_POOL_ONE[@]}" "${SDWDATE_POOL_TWO[@]}" "${SDWDATE_POOL_THREE[@]}"; do
      i="$(( $i + 1 ))"
      sdwdate_get_time_from_remote "$element"
      if [ ! "${sdwdate_download_tool_exit_code[$SDWDATE_CURRENT_POOL]}" = "0" ]; then
         echo "FAILED : $element"
      else
         echo "SUCCESS: $element"
      fi
   done
}

download_unit_test
