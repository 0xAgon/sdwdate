#! /usr/bin/env python

## TODO:
## - any reason to stick with libcurl or is there an even better python-only lib?
## - maybe use https (as option true or false [not for .onion])
## - "--max-time 180" required or does timeout below work?
## - check if it really uses "--head" by inspecting traffic
## - command line parameter to set url
## - command line parameter for proxy settings yes/no
## - command line parameter verbose option?
## - command line parameter for curl user agent
## - check what other libcurl options there are which we should use?
## - anything else?

import time
## TODO: dependency on python-pycurl to debian/control
import pycurl
import re
import sys
from dateutil.parser import parse

## Thanks to:
## - pycurl: examples/quickstart/response_headers.py
## - http://pycurl.sourceforge.net/doc/quickstart.html#examining-response-headers
headers = {}
def header_function(header_line):
    # HTTP standard specifies that headers are encoded in iso-8859-1.
    # On Python 2, decoding step can be skipped.
    # On Python 3, decoding step is required.
    header_line = header_line.decode('iso-8859-1')

    # Header lines include the first status line (HTTP/1.x ...).
    # We are going to ignore all lines that don't have a colon in them.
    # This will botch headers that are split on multiple lines...
    if ':' not in header_line:
        return

    # Break the header line into header name and value.
    name, value = header_line.split(':', 1)

    # Remove whitespace that may be present.
    # Header lines include the trailing newline, and there may be whitespace
    # around the colon.
    name = name.strip()
    value = value.strip()

    # Header names are case insensitive.
    # Lowercase name here.
    name = name.lower()

    # Now we can actually record the header name and value.
    #headers[name] = value

    if name == "date":
       #print "%s" % (value)
       ## TODO: dependency on python-dateutil in debian/control
       ## Thanks to:
       ## eumiro
       ## http://stackoverflow.com/a/3894047/2605155
       yyy=parse(value).strftime('%s')
       print "%s" % (yyy)
       sys.exit(0)

url = "http://www.cnn.com"

c = pycurl.Curl()

c.setopt(c.URL, url)
c.setopt(c.FOLLOWLOCATION, 0)
c.setopt(c.MAXREDIRS, 0)
c.setopt(c.HEADERFUNCTION, header_function);
c.setopt(c.NOBODY, 1);
## TODO: Test if it really works.
c.setopt(c.TIMEOUT,10);

c.perform()
c.close()

sys.exit(255)
