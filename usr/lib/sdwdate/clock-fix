#!/bin/bash

set -x
set -e

if [ ! "$(id -u)" = "0" ]; then
   echo "$0 ERROR: Must run as root!" >> /var/log/sdwdate.log
   exit 2
fi

if [ -d "/usr/lib/qubes" ]; then
   randomized_unix_time="$(timeout --kill-after="5" "5" /usr/lib/qubes/qrexec-client-vm dom0 qubes.GetRandomizedTime)"
else
   echo "$0 INFO: Clock fix after resume not implemented in Non-Qubes-Whonix. See: https://www.whonix.org/wiki/Troubleshooting#Clock_Fix" >> /var/log/sdwdate.log
   exit 3
fi

echo "$0 INFO: date before roughly fixing it: $(date -u)" >> /var/log/sdwdate.log

date --set "@$randomized_unix_time" >/dev/null

echo "$0 INFO: date after roughly fixing it : $(date -u)" >> /var/log/sdwdate.log

echo "$0 INFO: Running /usr/lib/sdwdate/restart_fresh..." >> /var/log/sdwdate.log
## Deletes '/var/run/sdwdate/first_success'.
/usr/lib/sdwdate/restart_fresh
echo "$0 INFO: Done, with /usr/lib/sdwdate/restart_fresh." >> /var/log/sdwdate.log

echo "$0 INFO: Restarting sdwdate..." >> /var/log/sdwdate.log
service sdwdate restart
echo "$0 INFO: Done, restarted sdwdate." >> /var/log/sdwdate.log

## Whonix firewall full mode
##
## After sdwdate restart, sdwdate will on success recreate the status file
## '/var/run/sdwdate/first_success'.
##
## ( whonix-[gw|ws]-firewall ) /lib/systemd/system/whonix-firewall-sdwdate-watcher.service /
## ( anon-shared-helper-scripts ) /usr/lib/anon-shared-helper-scripts/firewall-restarter
## will notice this, and restart Whonix firewall in full mode.
